import parseEmailTag from "../../src/background/utils/parseEmailTag";

describe('emailTagParser', () => {
	it('return undefined when it gets undefined', ()=> {
		let parsedEmail = parseEmailTag(undefined);

		expect(parsedEmail).toBeUndefined();
	});

	it('return undefined when it gets empty string', ()=> {
		let parsedEmail = parseEmailTag('');

		expect(parsedEmail).toBeUndefined();
	});

	// special treatment for feeds generated by blogger.com
	it('return undefined when e-mail is noreply@blogger.com', ()=> {
		let parsedEmail = parseEmailTag('noreply@blogger.com (Some author name)');

		expect(parsedEmail).toBeUndefined();
	});
	
	it('should parse a tag with an email only', ()=> {
		let parsedEmail = parseEmailTag('some.email@domain.com');

		expect(parsedEmail).toBe('some.email@domain.com');
	});

	it('should parse a tag with an email and name', ()=> {
		let parsedEmail = parseEmailTag('some.email@domain.com (Some Name)');

		expect(parsedEmail).toBe('some.email@domain.com');
	});
})